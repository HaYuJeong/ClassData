# 서버 포트 : 기본포트(8080) -> 변경(8000)
server.port=8000
# jsp 파일 경로 지정 : spring 에 jsp 위치 알려주는 설정
spring.mvc.view.prefix=/WEB-INF/views/
# 자바 소스가 수정되면 서버 자동 재시작을 함
spring.devtools.restart.enabled=true
# Todo: PUT , DELETE 방식도 form 태그에서 사용할 수 있게 만들어줌
spring.mvc.hiddenmethod.filter.enabled=true

# TODO: DB 라이브러리 설정 : build.gradle에 오라클 DB 관련된 라이브러리 없으면 에러발생
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
# Todo: DB 접속 정보 설정 : 도커 오라클, 계정/암호, db명(서비스이름)(expdb1)
# Todo: spring.datasources.url=jdbc:log4jdbc:oracle:thin:@ip주소:db포트번호/db이름
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521/xepdb1
# 계정정보
spring.datasource.username=scott
# 암호
spring.datasource.password=!Ds1234567890

# TODO: JPA 접속 설정
# JPA : sql 을 자동생성해주는 프레임워크 :
# => JPA 기본함수만 실행하면 해당되는 sql 문을 만들어줌(자동화기능)
# => JPA 복잡한 sql 문은 개발자가 직접 작성하는 기능이 있음 => Querydsl 라이브러리
# vs Mybatis : 모든 sql을 개발자가 직접 작성하는 방식, 대신에 작성시 가독성을 높여서 작성 가능

# JPA : sql 자동작성 기능 : 1) ddl(테이블생성, 시퀀스 생성 등) 생성             : 비추천(엉망으로 만듬)
#                        2) dml(CRUD : insert/select/update/delete) 생성 : 추천
# ddl 자동생성 기능 옵션 : none(끄기), create(켜기), update(없는것만 만들기)
spring.jpa.hibernate.ddl-auto=none
# TODO: DB 제품 연결 (oracle 12이상 : Oracle12cDialect)
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect

# TODO : 업로드 파일 사이즈 제한 설정 : 기본(1MB 까지)
# file upload size 설정
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB